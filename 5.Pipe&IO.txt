重定向：
	输出重定向:
		>:覆盖
		>>:追加
		
		set -C:禁止覆盖输出,若强制覆盖则使用>|
		set +C:允许覆盖输出
		
		标准输出:> >> 
		错误输出:2> 2>>
		&>和&>>:重定向2种输出
	输入重定向:
		<
		<<:此处生成文档
		
管道:
	命令1|命令2:命令1的输出是命令2的输入
	
grep:分析文件中一行信息，如果一行中有我们想要的，就将该行拿出来

正则表达式(Regular Expression):
	. 匹配任意单个字符
	* 匹配其前面的字符任意次
	\? 匹配其前面的字符1次或0次
	\{m,n\} 匹配其前面的字符至少m次,最多n次
	^ 锚定行首,此字符后面的任意内容必须出现在行首
	$ 锚定行位,此字符前面的任意内容必须出现在行尾
	\<WORD 匹配后面跟出现在字符串首部的单词
	WORD\> 匹配前面跟出现在字符串尾部的单词
	\<WORD\> 匹配整个单词
	\(\) 分组,如\(ab\)*的解释是把ab当成一个整体,出现任意次ab

	